package com.example.matrix;

public final class WorldLayoutData {

  public static final float[] FLOOR_COORDS = new float[] {
      // +X, +Z quadrant
      160, 0, 0,
      0, 0, 0,
      0, 0, 160,
      160, 0, 0,
      0, 0, 160,
      160, 0, 160,

      // -X, +Z quadrant
      0, 0, 0,
      -160, 0, 0,
      -160, 0, 160,
      0, 0, 0,
      -160, 0, 160,
      0, 0, 160,

      // +X, -Z quadrant
      160, 0, -160,
      0, 0, -160,
      0, 0, 0,
      160, 0, -160,
      0, 0, 0,
      160, 0, 0,

      // -X, -Z quadrant
      0, 0, -160,
      -160, 0, -160,
      -160, 0, 0,
      0, 0, -160,
      -160, 0, 0,
      0, 0, 0,
  };

  public static final float[] FLOOR_NORMALS = new float[] {
      0.0f, 1.0f, 0.0f,
      0.0f, 1.0f, 0.0f,
      0.0f, 1.0f, 0.0f,
      0.0f, 1.0f, 0.0f,
      0.0f, 1.0f, 0.0f,
      0.0f, 1.0f, 0.0f,
      0.0f, 1.0f, 0.0f,
      0.0f, 1.0f, 0.0f,
      0.0f, 1.0f, 0.0f,
      0.0f, 1.0f, 0.0f,
      0.0f, 1.0f, 0.0f,
      0.0f, 1.0f, 0.0f,
      0.0f, 1.0f, 0.0f,
      0.0f, 1.0f, 0.0f,
      0.0f, 1.0f, 0.0f,
      0.0f, 1.0f, 0.0f,
      0.0f, 1.0f, 0.0f,
      0.0f, 1.0f, 0.0f,
      0.0f, 1.0f, 0.0f,
      0.0f, 1.0f, 0.0f,
      0.0f, 1.0f, 0.0f,
      0.0f, 1.0f, 0.0f,
      0.0f, 1.0f, 0.0f,
      0.0f, 1.0f, 0.0f,
  };

  public static final float[] FLOOR_COLORS = new float[] {
          0.0f, 0f, 0f, 1.0f,
          0.0f, 0f, 0f, 1.0f,
          0.0f, 0f, 0f, 1.0f,
          0.0f, 0f, 0f, 1.0f,
          0.0f, 0f, 0f, 1.0f,
          0.0f, 0f, 0f, 1.0f,
          0.0f, 0f, 0f, 1.0f,
          0.0f, 0f, 0f, 1.0f,
          0.0f, 0f, 0f, 1.0f,
          0.0f, 0f, 0f, 1.0f,
          0.0f, 0f, 0f, 1.0f,
          0.0f, 0f, 0f, 1.0f,
          0.0f, 0f, 0f, 1.0f,
          0.0f, 0f, 0f, 1.0f,
          0.0f, 0f, 0f, 1.0f,
          0.0f, 0f, 0f, 1.0f,
          0.0f, 0f, 0f, 1.0f,
          0.0f, 0f, 0f, 1.0f,
          0.0f, 0f, 0f, 1.0f,
          0.0f, 0f, 0f, 1.0f,
          0.0f, 0f, 0f, 1.0f,
          0.0f, 0f, 0f, 1.0f,
          0.0f, 0f, 0f, 1.0f,
          0.0f, 0f, 0f, 1.0f,
  };

  public static final float[] DOOR_COORDS = new float[] {
          //front
          -10, 0, -37,
          10, 0, -37,
          -10, 40, -37,
          -10, 40, -37,
          10, 0, -37,
          10, 40, -37,

          //right
          10, 0, -37,
          10, 0, -38,
          10, 40, -37,
          10, 40, -37,
          10, 0, -38,
          10, 40, -38,

          //back
          -10, 0, -38,
          10, 0, -38,
          -10, 40, -38,
          -10, 40, -38,
          10, 0, -38,
          10, 40, -38,

          //left
          -10, 0, -37,
          -10, 0, -38,
          -10, 40, -37,
          -10, 40, -37,
          -10, 0, -38,
          -10, 40, -38,

          //top
          -10, 40, -37,
          10, 40, -37,
          -10, 40, -38,
          -10, 40, -38,
          10, 40, -37,
          10, 40, -38,
  };

  public static final float[] DOOR_COORDS2 = new float[] {
          //front
 /*         -10, 0, -37,
          10, 0, -37,
          -10, 40, -37,
          -10, 40, -37,
          10, 0, -37,
          10, 40, -37,
*/
          //right
          10, 0, -37,
          10, 0, -40,
          10, 40, -37,
          10, 40, -37,
          10, 0, -40,
          10, 40, -40,

          //back
          -10, 0, -40,
          10, 0, -40,
          -10, 40, -40,
          -10, 40, -40,
          10, 0, -40,
          10, 40, -40,

          //left
          -10, 0, -37,
          -10, 0, -40,
          -10, 40, -37,
          -10, 40, -37,
          -10, 0, -40,
          -10, 40, -40,

          //top
          -10, 40, -37,
          10, 40, -37,
          -10, 40, -40,
          -10, 40, -40,
          10, 40, -37,
          10, 40, -40,
  };



  public static final float[] DOOR_TEXTURE = new float[] {
          0,0,
          1,0,
          0,1,
          0,1,
          1,0,
          1,1,

          0,0,
          1,0,
          0,1,
          0,1,
          1,0,
          1,1,

          0,0,
          1,0,
          0,1,
          0,1,
          1,0,
          1,1,

          0,0,
          1,0,
          0,1,
          0,1,
          1,0,
          1,1,

          0,0,
          1,0,
          0,1,
          0,1,
          1,0,
          1,1,

    /*      0,0,
          1,0,
          0,1,
          0,1,
          1,0,
          1,1,
    */
  };

  public static final float[] DOOR_TEXTURE2 = new float[] {
          0,0,
          1,0,
          0,1,
          0,1,
          1,0,
          1,1,

          0,0,
          1,0,
          0,1,
          0,1,
          1,0,
          1,1,

          0,0,
          1,0,
          0,1,
          0,1,
          1,0,
          1,1,

          0,0,
          1,0,
          0,1,
          0,1,
          1,0,
          1,1,

  /*        0,0,
          1,0,
          0,1,
          0,1,
          1,0,
          1,1,
          */
  };

  public static final float[] MATRIX_COORDS = new float[] {
          //front
          -10, 0, -38.5f,
          10, 0, -38.5f,
          -10, 40, -38.5f,
          -10, 40, -38.5f,
          10, 0, -38.5f,
          10, 40, -38.5f,
  };

  public static final float[] MATRIX_TEXTURE = new float[] {
          1,1,
          0,1,
          1,0,
          1,0,
          0,1,
          0,0,
  };

  public static final float[] BULLET_COORDS = new float[] {
          // Front face
          -1.0f, 1.0f, 1.0f,
          -1.0f, -1.0f, 1.0f,
          1.0f, 1.0f, 1.0f,
          -1.0f, -1.0f, 1.0f,
          1.0f, -1.0f, 1.0f,
          1.0f, 1.0f, 1.0f,

          // Right face
          1.0f, 1.0f, 1.0f,
          1.0f, -1.0f, 1.0f,
          1.0f, 1.0f, -1.0f,
          1.0f, -1.0f, 1.0f,
          1.0f, -1.0f, -1.0f,
          1.0f, 1.0f, -1.0f,

          // Back face
          1.0f, 1.0f, -1.0f,
          1.0f, -1.0f, -1.0f,
          -1.0f, 1.0f, -1.0f,
          1.0f, -1.0f, -1.0f,
          -1.0f, -1.0f, -1.0f,
          -1.0f, 1.0f, -1.0f,

          // Left face
          -1.0f, 1.0f, -1.0f,
          -1.0f, -1.0f, -1.0f,
          -1.0f, 1.0f, 1.0f,
          -1.0f, -1.0f, -1.0f,
          -1.0f, -1.0f, 1.0f,
          -1.0f, 1.0f, 1.0f,

          // Top face
          -1.0f, 1.0f, -1.0f,
          -1.0f, 1.0f, 1.0f,
          1.0f, 1.0f, -1.0f,
          -1.0f, 1.0f, 1.0f,
          1.0f, 1.0f, 1.0f,
          1.0f, 1.0f, -1.0f,

          // Bottom face
          1.0f, -1.0f, -1.0f,
          1.0f, -1.0f, 1.0f,
          -1.0f, -1.0f, -1.0f,
          1.0f, -1.0f, 1.0f,
          -1.0f, -1.0f, 1.0f,
          -1.0f, -1.0f, -1.0f,
  };

  public static final float[] BULLET_NORMALS = new float[] {
          // Front face
          0.0f, 0.0f, 1.0f,
          0.0f, 0.0f, 1.0f,
          0.0f, 0.0f, 1.0f,
          0.0f, 0.0f, 1.0f,
          0.0f, 0.0f, 1.0f,
          0.0f, 0.0f, 1.0f,

          // Right face
          1.0f, 0.0f, 0.0f,
          1.0f, 0.0f, 0.0f,
          1.0f, 0.0f, 0.0f,
          1.0f, 0.0f, 0.0f,
          1.0f, 0.0f, 0.0f,
          1.0f, 0.0f, 0.0f,

          // Back face
          0.0f, 0.0f, -1.0f,
          0.0f, 0.0f, -1.0f,
          0.0f, 0.0f, -1.0f,
          0.0f, 0.0f, -1.0f,
          0.0f, 0.0f, -1.0f,
          0.0f, 0.0f, -1.0f,

          // Left face
          -1.0f, 0.0f, 0.0f,
          -1.0f, 0.0f, 0.0f,
          -1.0f, 0.0f, 0.0f,
          -1.0f, 0.0f, 0.0f,
          -1.0f, 0.0f, 0.0f,
          -1.0f, 0.0f, 0.0f,

          // Top face
          0.0f, 1.0f, 0.0f,
          0.0f, 1.0f, 0.0f,
          0.0f, 1.0f, 0.0f,
          0.0f, 1.0f, 0.0f,
          0.0f, 1.0f, 0.0f,
          0.0f, 1.0f, 0.0f,

          // Bottom face
          0.0f, -1.0f, 0.0f,
          0.0f, -1.0f, 0.0f,
          0.0f, -1.0f, 0.0f,
          0.0f, -1.0f, 0.0f,
          0.0f, -1.0f, 0.0f,
          0.0f, -1.0f, 0.0f
  };

  //--

  public static final float[] DOOR_COORDS3 = new float[] {
          //front
          -10, 0, -37,
          10, 0, -37,
          -10, 40, -37,
          -10, 40, -37,
          10, 0, -37,
          10, 40, -37,

          //right
          10, 0, -37,
          10, 0, -38,
          10, 40, -37,
          10, 40, -37,
          10, 0, -38,
          10, 40, -38,

          //back
          -10, 0, -38,
          10, 0, -38,
          -10, 40, -38,
          -10, 40, -38,
          10, 0, -38,
          10, 40, -38,

          //left
          -10, 0, -37,
          -10, 0, -38,
          -10, 40, -37,
          -10, 40, -37,
          -10, 0, -38,
          -10, 40, -38,

          //top
          -10, 40, -37,
          10, 40, -37,
          -10, 40, -38,
          -10, 40, -38,
          10, 40, -37,
          10, 40, -38,
  };

  public static final float[] DOOR_COORDS3_1 = new float[] {
          //front
 /*         -10, 0, -37,
          10, 0, -37,
          -10, 40, -37,
          -10, 40, -37,
          10, 0, -37,
          10, 40, -37,
*/
          //right
          10, 0, -77,
          10, 0, -80,
          10, 40, -77,
          10, 40, -77,
          10, 0, -80,
          10, 40, -80,

          //back
          -10, 0, -80,
          10, 0, -80,
          -10, 40, -80,
          -10, 40, -80,
          10, 0, -80,
          10, 40, -80,

          //left
          -10, 0, -77,
          -10, 0, -80,
          -10, 40, -77,
          -10, 40, -77,
          -10, 0, -80,
          -10, 40, -80,

          //top
          -10, 40, -77,
          10, 40, -77,
          -10, 40, -80,
          -10, 40, -80,
          10, 40, -77,
          10, 40, -80,
  };



  public static final float[] DOOR_TEXTURE3 = new float[] {
          0,0,
          1,0,
          0,1,
          0,1,
          1,0,
          1,1,

          0,0,
          1,0,
          0,1,
          0,1,
          1,0,
          1,1,

          0,0,
          1,0,
          0,1,
          0,1,
          1,0,
          1,1,

          0,0,
          1,0,
          0,1,
          0,1,
          1,0,
          1,1,

          0,0,
          1,0,
          0,1,
          0,1,
          1,0,
          1,1,

          0,0,
          1,0,
          0,1,
          0,1,
          1,0,
          1,1,
  };

  public static final float[] DOOR_TEXTURE3_1 = new float[] {
          0,0,
          1,0,
          0,1,
          0,1,
          1,0,
          1,1,

          0,0,
          1,0,
          0,1,
          0,1,
          1,0,
          1,1,

          0,0,
          1,0,
          0,1,
          0,1,
          1,0,
          1,1,

          0,0,
          1,0,
          0,1,
          0,1,
          1,0,
          1,1,

          0,0,
          1,0,
          0,1,
          0,1,
          1,0,
          1,1,
  };




}
